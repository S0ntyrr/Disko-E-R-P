# üìå Proyecto ERP para Discotecas  

Este repositorio contiene la planeaci√≥n y ejecuci√≥n del **Sprint 1** para el desarrollo del ERP.  
El trabajo se gestiona en **GitHub Projects** y se documenta en este README.  

---

## üìã Sprint Test Planning  

Durante el Sprint 1 se priorizaron historias de usuario cr√≠ticas para garantizar la funcionalidad base del sistema.  
Cada historia de usuario cuenta con al menos 5 casos de prueba en la plataforma seleccionada.  

---

## ‚úÖ Product Backlog  

| ID | Historia de Usuario | Prioridad | Estado |
|----|---------------------|-----------|--------|
| HU-01 | Como usuario quiero acceder al sistema con usuario y contrase√±a para ingresar al ERP. | Alta | To Do |
| HU-02 | Como administrador quiero registrar nuevos usuarios para gestionar accesos. | Alta | To Do |
| HU-03 | Como usuario quiero recuperar mi contrase√±a en caso de olvido. | Media | To Do |
| HU-04 | Como administrador quiero ver reportes b√°sicos de ventas. | Media | To Do |
| HU-05 | Como usuario quiero cerrar sesi√≥n de forma segura. | Baja | To Do |

> ‚ÑπÔ∏è Cada historia se encuentra creada como **Issue en GitHub** y vinculada al tablero de gesti√≥n del Sprint.  

---

## üß™ Test Cases  

Ejemplo para **HU-01 (Login b√°sico)**:  

1. Ingresar credenciales correctas ‚Üí Acceso concedido.  
2. Ingresar contrase√±a incorrecta ‚Üí Mostrar mensaje de error.  
3. Intentar acceder sin llenar campos ‚Üí Mostrar validaci√≥n.  
4. Usuario inactivo intenta loguearse ‚Üí Denegar acceso.  
5. Acceso desde dispositivo m√≥vil ‚Üí Debe funcionar correctamente.  

---

## üë• Roles del Equipo y Estrategias  

Antes de iniciar el desarrollo, se identificaron fortalezas y debilidades de cada miembro del equipo, asignando roles para liderar aspectos t√©cnicos, organizacionales y de calidad.  

| Estrategias / Encargado | Juan (T√©cnico) | Andr√©s (Comunicaci√≥n) | Santiago (Calidad) |
|--------------------------|----------------|------------------------|---------------------|
| **Aspectos t√©cnicos**   | Lidera la configuraci√≥n del entorno, la arquitectura del sistema y la base de datos. Se apoya en revisiones conjuntas para evitar cuellos de botella. | Da soporte puntual en pruebas de integraci√≥n y validaci√≥n de requerimientos t√©cnicos. | Supervisa que las implementaciones cumplan con est√°ndares de c√≥digo y buenas pr√°cticas. |
| **Comunicaci√≥n**        | Comparte avances t√©cnicos de forma documentada en GitHub y Slack. | Lidera la organizaci√≥n de reuniones y se asegura de que todos los miembros comprendan los objetivos del sprint. | Refuerza la comunicaci√≥n en retrospectivas proponiendo mejoras al flujo de trabajo. |
| **Aseguramiento de calidad** | Aplica pruebas unitarias en m√≥dulos desarrollados. | Recoge retroalimentaci√≥n de los usuarios finales y traduce en ajustes de requerimientos. | Lidera pruebas de aceptaci√≥n, revisa documentaci√≥n t√©cnica y valida entregables antes del despliegue. |

‚úÖ Con esta distribuci√≥n se busca balancear las responsabilidades y potenciar las fortalezas de cada miembro.  

---

## üìÖ Sprint Planning  

- **Duraci√≥n del Sprint:** 2 semanas  
- **Fecha de finalizaci√≥n:** Domingo, 31 de Agosto  
- **Sprint Review:** Presentaci√≥n del incremento del producto en la misma fecha.  

### Cronograma de Actividades  

| Tarea | Responsable | Fecha estimada | Estado |
|-------|-------------|----------------|--------|
| Configuraci√≥n de entorno y base de datos | Juan | 24 de agosto | En progreso |
| Implementaci√≥n Login (HU-01) | Juan | 26 de agosto | Pendiente |
| Registro de usuarios (HU-02) | Juan | 28 de agosto | Pendiente |
| Documentaci√≥n y comunicaci√≥n de avances | Andr√©s | Todo el sprint | En progreso |
| Pruebas unitarias y de integraci√≥n | Santiago | 29 de agosto | Pendiente |
| Sprint Review y entrega final | Equipo | 31 de agosto | Pendiente |

---

## üìä Gesti√≥n en GitHub  

- ‚úÖ Issues creados por cada **Historia de Usuario**.  
- ‚úÖ Tablero de proyecto en **GitHub Projects** con columnas:  
  - To Do  
  - In Progress  
  - Done  
- ‚úÖ Evidencia de avances mediante commits y pull requests.  

---

‚ú® Con esta planeaci√≥n clara, el equipo asegura orden y visibilidad en el desarrollo del Sprint.
