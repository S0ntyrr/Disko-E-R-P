# üìå Proyecto ERP para Discotecas  

Este repositorio contiene la planeaci√≥n y ejecuci√≥n del **Sprint 1** para el desarrollo del ERP.  
El trabajo se gestiona en **GitHub Projects** y se documenta en este README.  

## üìã Sprint Test Planning  

Durante el Sprint 1 se priorizaron historias de usuario cr√≠ticas para garantizar la funcionalidad base del sistema.  
Cada historia de usuario cuenta con al menos 5 casos de prueba en la plataforma seleccionada.  


## ‚úÖ Product Backlog  

# üìå Product Backlog - Disko ERP

## Priorizaci√≥n 1: MoSCoW
| ID     | Historia de Usuario                           | Estimaci√≥n | Categor√≠a |
|--------|-----------------------------------------------|------------|-----------|
| HU-01  | Escaneo de ID en entrada                      | 3 pts      | Must      |
| HU-02  | Registro y verificaci√≥n de reservaciones      | 5 pts      | Must      |
| HU-03  | Panel de ocupaci√≥n en tiempo real             | 8 pts      | Should    |
| HU-04  | Reportes de asistencia semanal                | 5 pts      | Could     |
| HU-05  | Notificaci√≥n a clientes VIP                   | 3 pts      | Won‚Äôt     |

---

## Priorizaci√≥n 2: WSJF
| ID     | Historia de Usuario                           | Valor | Urgencia | Reducci√≥n de Riesgo | Esfuerzo | WSJF |
|--------|-----------------------------------------------|-------|----------|---------------------|----------|------|
| HU-01  | Escaneo de ID en entrada                      |   8   |    7     |          6          |    3     | 7.0  |
| HU-02  | Registro y verificaci√≥n de reservaciones      |   9   |    8     |          7          |    5     | 4.8  |
| HU-03  | Panel de ocupaci√≥n en tiempo real             |   7   |    5     |          8          |    8     | 2.5  |
| HU-04  | Reportes de asistencia semanal                |   5   |    3     |          4          |    5     | 2.4  |
| HU-05  | Notificaci√≥n a clientes VIP                   |   4   |    2     |          2          |    3     | 2.6  |

---

üìå **Conclusiones de la priorizaci√≥n**  
- HU-01 y HU-02 son las de **m√°s alto valor** para el cliente ‚Üí entran en Sprint 1.  
- HU-03 se deja como **segundo sprint**, ya que es √∫til pero no cr√≠tico.  
- HU-04 y HU-05 quedan en backlog de menor prioridad.  

| ID | Historia de Usuario | Prioridad | Estado |
|-||--|--|
| HU-01 | Como usuario quiero acceder al sistema con usuario y contrase√±a para ingresar al ERP. | Alta | To Do |
| HU-02 | Como administrador quiero registrar nuevos usuarios para gestionar accesos. | Alta | To Do |
| HU-03 | Como usuario quiero recuperar mi contrase√±a en caso de olvido. | Media | To Do |
| HU-04 | Como administrador quiero ver reportes b√°sicos de ventas. | Media | To Do |
| HU-05 | Como usuario quiero cerrar sesi√≥n de forma segura. | Baja | To Do |

> ‚ÑπÔ∏è Cada historia se encuentra creada como **Issue en GitHub** y vinculada al tablero de gesti√≥n del Sprint.  


# Sprint Backlog ‚Äì Sprint 1 (25 al 31 de agosto)

## Historias de Usuario seleccionadas (por prioridad)

### HU-01: [Login b√°sico](https://github.com/S0ntyrr/Disko-E-R-P/issues/1) *(Alta prioridad)*
**Descripci√≥n:**
Como usuario quiero acceder al sistema con usuario y contrase√±a para ingresar al ERP.

**Acceptance Criteria:**
1. Valida usuario y contrase√±a en la base de datos.
2. En caso de error, muestra mensaje: "Usuario o contrase√±a incorrectos".
3. Contrase√±as cifradas/encriptadas.
4. M√°ximo de 3 intentos fallidos antes de bloquear temporalmente.
5. Acceso exitoso redirige al dashboard principal.

**Tareas t√©cnicas:**
- [ ] Crear el formulario de login en el frontend.
- [ ] Crear endpoint de autenticaci√≥n en el backend.
- [ ] Implementar cifrado de contrase√±as (Hash+Salt).
- [ ] Conectar frontend con API y manejar respuestas.
- [ ] Crear pruebas unitarias e integraci√≥n del flujo de login.



### HU-02: [Registro de clientes](https://github.com/S0ntyrr/Disko-E-R-P/issues/2) *(Alta prioridad)*
**Descripci√≥n:**
Como administrador quiero registrar clientes con sus datos para gestionar informaci√≥n en el sistema.

**Acceptance Criteria:**
1. Permite registrar nombre, correo, tel√©fono y direcci√≥n.
2. Validaci√≥n de campos obligatorios (correo v√°lido, tel√©fono num√©rico).
3. Cada cliente con ID √∫nico.
4. Muestra confirmaci√≥n al guardar el cliente.
5. Cliente se almacena correctamente en la base de datos.

**Tareas t√©cnicas:**
- [ ] Crear formulario de registro en frontend.
- [ ] Crear endpoint REST para registrar cliente.
- [ ] Implementar validaciones de datos en backend.
- [ ] Persistir datos en la base de datos.
- [ ] A√±adir pruebas unitarias e integraci√≥n de registro.



### HU-03: [Gesti√≥n de inventario](https://github.com/S0ntyrr/Disko-E-R-P/issues/3) *(Media prioridad)*
**Descripci√≥n:**
Como administrador quiero registrar y actualizar inventario para mantener el control de productos.

**Acceptance Criteria:**
1. Mostrar lista de productos con cantidad disponible.
2. Permite registrar nuevos productos (nombre, precio, stock).
3. Actualiza stock al registrar entrades o salidas.
4. Genera alerta cuando el stock cae por debajo del nivel m√≠nimo.
5. Cambios se reflejan inmediatamente en la base de datos.

**Tareas t√©cnicas:**
- [ ] Construir interfaz de inventario en frontend.
- [ ] Crear endpoints CRUD de inventario en backend.
- [ ] Implementar alerta de stock bajo.
- [ ] Sincronizar inventario con flujo de ventas/entradas.
- [ ] Pruebas unitarias e integraci√≥n del inventario.



## Plan de ejecuci√≥n del Sprint

- **Semana Sprint:** del 25 al 31 de agosto
- **Cronograma:**
  - **D√≠as 1‚Äì2:** Desarrollo completo de HU-01 (Login).
  - **D√≠as 2‚Äì4:** Desarrollo completo de HU-02 (Clientes).
  - **D√≠as 4‚Äì6:** Desarrollo completo de HU-03 (Inventario).
  - **D√≠a 7:** Pruebas de integraci√≥n final + preparaci√≥n de Sprint Review.

## üë• Roles del Equipo y Estrategias  

Antes de iniciar el desarrollo, se identificaron fortalezas y debilidades de cada miembro del equipo, asignando roles para liderar aspectos t√©cnicos, organizacionales y de calidad.  

| Estrategias / Encargado | Juan (T√©cnico) | Andr√©s (Comunicaci√≥n) | Santiago (Calidad) |
|--|-|||
| **Aspectos t√©cnicos**   | Lidera la configuraci√≥n del entorno, la arquitectura del sistema y la base de datos. Se apoya en revisiones conjuntas para evitar cuellos de botella. | Da soporte puntual en pruebas de integraci√≥n y validaci√≥n de requerimientos t√©cnicos. | Supervisa que las implementaciones cumplan con est√°ndares de c√≥digo y buenas pr√°cticas. |
| **Comunicaci√≥n**        | Comparte avances t√©cnicos de forma documentada en GitHub y Slack. | Lidera la organizaci√≥n de reuniones y se asegura de que todos los miembros comprendan los objetivos del sprint. | Refuerza la comunicaci√≥n en retrospectivas proponiendo mejoras al flujo de trabajo. |
| **Aseguramiento de calidad** | Aplica pruebas unitarias en m√≥dulos desarrollados. | Recoge retroalimentaci√≥n de los usuarios finales y traduce en ajustes de requerimientos. | Lidera pruebas de aceptaci√≥n, revisa documentaci√≥n t√©cnica y valida entregables antes del despliegue. |

‚úÖ Con esta distribuci√≥n se busca balancear las responsabilidades y potenciar las fortalezas de cada miembro.  



## üìÖ Sprint Planning  

- **Duraci√≥n del Sprint:** 2 semanas  
- **Fecha de finalizaci√≥n:** Domingo, 31 de Agosto  
- **Sprint Review:** Presentaci√≥n del incremento del producto en la misma fecha.  

### Cronograma de Actividades  

| Tarea | Responsable | Fecha estimada | Estado |
|-|-|-|--|
| Configuraci√≥n de entorno y base de datos | Juan | 24 de agosto | En progreso |
| Implementaci√≥n Login (HU-01) | Juan | 26 de agosto | Pendiente |
| Registro de usuarios (HU-02) | Juan | 28 de agosto | Pendiente |
| Documentaci√≥n y comunicaci√≥n de avances | Andr√©s | Todo el sprint | En progreso |
| Pruebas unitarias y de integraci√≥n | Santiago | 29 de agosto | Pendiente |
| Sprint Review y entrega final | Equipo | 31 de agosto | Pendiente |



## üìä Gesti√≥n en GitHub  

- ‚úÖ Issues creados por cada **Historia de Usuario**.  
- ‚úÖ Tablero de proyecto en **GitHub Projects** con columnas:  
  - To Do  
  - In Progress  
  - Done  
- ‚úÖ Evidencia de avances mediante commits y pull requests.  



‚ú® Con esta planeaci√≥n clara, el equipo asegura orden y visibilidad en el desarrollo del Sprint.
